{
  "name": "str-certified",
  "private": true,
  "version": "1.0.2",
  "type": "module",
  "description": "AI-powered property inspection platform",
  "author": "STR Certified Team",
  "license": "UNLICENSED",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "scripts": {
    "dev": "vite",
    "dev:staging": "vite --mode staging",
    "build": "vite build --mode production",
    "build:fast": "vite build --mode production --minify false",
    "build:dev": "vite build --mode development",
    "build:staging": "VITE_APP_ENV=staging tsc && vite build --mode staging",
    "build:check": "npm run typecheck",
    "build:analyze": "vite build --mode analyze",
    "build:unified": "tsc && vite build",
    "build:railway": "npm run build:unified",
    "build:production": "NODE_ENV=production npm run build:unified",
    "preview": "vite preview",
    "preview:staging": "npm run build:staging && vite preview --mode staging",
    "preview:prod": "npm run build && npm run preview",
    "preview:unified": "npm run build:unified && vite preview",
    "preview:railway": "npm run preview:unified",
    "test": "vitest",
    "test:watch": "vitest --watch",
    "test:run": "vitest run",
    "test:comprehensive": "npx tsx scripts/run-comprehensive-tests.ts",
    "test:validate": "npx tsx -e \"import('./src/tests/validation/inspection-creation-flow-validator.ts').then(m => m.runQuickValidation())\"",
    "typecheck": "tsc --noEmit",
    "lint": "eslint . --max-warnings 500",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,css,scss,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,css,scss,md}\"",
    "cleanup:console": "node scripts/remove-console-statements.js",
    "cleanup:console:dry": "node scripts/remove-console-statements.js --dry-run",
    "cleanup:debt": "bash scripts/find-tech-debt.sh",
    "cleanup:any": "npx typescript-strict-plugin",
    "cleanup:all": "npm run cleanup:console && npm run cleanup:any",
    "test:staging": "VITE_APP_ENV=staging vitest --config vitest.staging.config.ts",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest --coverage",
    "test:coverage:open": "vitest --coverage && open coverage/index.html",
    "test:coverage:ci": "vitest run --coverage --reporter=junit --reporter=json --reporter=html",
    "test:unit": "vitest run src/**/__tests__/unit",
    "test:integration": "vitest run src/**/__tests__/integration",
    "test:components": "vitest run src/**/__tests__/components",
    "test:services": "vitest run src/**/__tests__/services",
    "test:hooks": "vitest run src/**/__tests__/hooks",
    "test:ai": "vitest run src/**/__tests__/ai",
    "test:performance": "vitest run src/**/__tests__/performance --reporter=verbose",
    "test:pwa": "vitest run src/tests/performance/PWAPerformanceIntegration.test.ts --reporter=verbose",
    "test:pwa:watch": "vitest src/tests/performance/PWAPerformanceIntegration.test.ts",
    "test:sw": "vitest run src/tests/pwa/ServiceWorker.test.ts --reporter=verbose",
    "test:offline": "vitest run src/tests/pwa/OfflineCapability.test.ts --reporter=verbose",
    "test:load": "artillery run artillery-config.yml",
    "test:load:staging": "artillery run artillery-config.yml --environment staging",
    "test:load:production": "artillery run artillery-config.yml --environment production",
    "test:chaos": "artillery run artillery-config.yml --config '{\"chaos\": true}'",
    "test:smoke": "vitest run --reporter=dot src/**/__tests__/**/*.smoke.test.*",
    "test:regression": "vitest run --reporter=verbose src/**/__tests__/**/*.regression.test.*",
    "test:security": "vitest run src/**/__tests__/security --reporter=verbose",
    "test:accessibility": "vitest run src/**/__tests__/accessibility --reporter=verbose",
    "test:visual": "vitest run src/**/__tests__/visual --reporter=verbose",
    "test:mutation": "echo 'Mutation testing not available - Stryker requires Vitest 2.0+'",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:components && npm run test:coverage",
    "test:ci": "npm run test:coverage:ci && npm run test:load",
    "test:e2e": "playwright test",
    "test:e2e:staging": "STAGING=true playwright test --config playwright.staging.config.ts",
    "cleanup:cache": "rm -rf node_modules/.cache dist .turbo",
    "cleanup:staging": "rm -rf node_modules/.cache dist .turbo && npm run cleanup:test-data",
    "cleanup:test-data": "node scripts/cleanup-test-data.js",
    "health:check": "node scripts/health-check.js",
    "deploy:railway": "npm run build:railway",
    "deploy:staging": "npm run build:staging",
    "deploy:check": "npm run build:check",
    "deploy:prod": "npm run deploy:check && npm run build:production",
    "start": "npm run preview",
    "start:staging": "npm run preview:staging",
    "postinstall": "npm run build:check || true",
    "prepare": "husky install || true",
    "db:migrate:staging": "supabase db push --project-ref ${STAGING_PROJECT_REF}",
    "db:reset:staging": "supabase db reset --project-ref ${STAGING_PROJECT_REF}",
    "db:seed:staging": "node scripts/seed-staging-data.js",
    "generate:test-data": "node scripts/generate-test-data.js",
    "refresh:test-data": "npm run cleanup:test-data && npm run generate:test-data",
    "staging:setup": "npm run db:migrate:staging && npm run db:seed:staging",
    "staging:reset": "npm run db:reset:staging && npm run staging:setup",
    "quality-gates": "npm run quality-gates:strict",
    "quality-gates:strict": "npm run typecheck && npm run lint && npm run test:coverage && npm run architecture-compliance && npm run performance-audit && npm run security-scan",
    "architecture-compliance": "node scripts/architecture-compliance.js",
    "performance-audit": "node scripts/performance-audit.js",
    "lighthouse:pwa": "lighthouse --only-categories=pwa --output=json --output-path=./lighthouse-pwa-report.json http://localhost:4173",
    "lighthouse:performance": "lighthouse --only-categories=performance --throttling-method=devtools --output=json --output-path=./lighthouse-performance.json http://localhost:4173",
    "lighthouse:construction": "lighthouse --throttling-method=devtools --throttling.cpuSlowdownMultiplier=6 --throttling.rttMs=150 --throttling.throughputKbps=400 --output=json http://localhost:4173",
    "pwa:audit": "npm run build && npm run preview & sleep 5 && npm run lighthouse:pwa && kill %1",
    "pwa:performance-audit": "npx tsx src/lib/performance/LighthousePWAAuditor.ts",
    "pwa:validate": "npm run pwa:audit && npm run pwa:performance-audit",
    "pwa:construction-test": "npm run build && npm run preview & sleep 5 && npm run lighthouse:construction && kill %1",
    "security-scan": "node scripts/security-scan.js",
    "code-quality-report": "node scripts/code-quality-report.js",
    "pre-commit": "npm run quality-gates",
    "pre-push": "npm run quality-gates:strict",
    "eliminate-console": "node scripts/eliminate-console-violations.js",
    "production-ready": "npm run eliminate-console && npm run quality-gates:strict",
    "setup:quality-gates": "node scripts/setup-quality-gates.cjs",
    "quality:fix-docs": "node scripts/fix-documentation-issues.cjs",
    "audit:comprehensive": "npm run quality-gates:strict && npm run test:comprehensive && npm run test:security"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.18.0",
    "@hookform/resolvers": "^3.9.0",
    "@radix-ui/react-accordion": "^1.2.0",
    "@radix-ui/react-alert-dialog": "^1.1.1",
    "@radix-ui/react-aspect-ratio": "^1.1.0",
    "@radix-ui/react-avatar": "^1.1.0",
    "@radix-ui/react-checkbox": "^1.1.1",
    "@radix-ui/react-collapsible": "^1.1.0",
    "@radix-ui/react-context-menu": "^2.2.1",
    "@radix-ui/react-dialog": "^1.1.2",
    "@radix-ui/react-dropdown-menu": "^2.1.1",
    "@radix-ui/react-hover-card": "^1.1.1",
    "@radix-ui/react-label": "^2.1.0",
    "@radix-ui/react-menubar": "^1.1.1",
    "@radix-ui/react-navigation-menu": "^1.2.0",
    "@radix-ui/react-popover": "^1.1.1",
    "@radix-ui/react-progress": "^1.1.0",
    "@radix-ui/react-radio-group": "^1.2.0",
    "@radix-ui/react-scroll-area": "^1.1.0",
    "@radix-ui/react-select": "^2.1.1",
    "@radix-ui/react-separator": "^1.1.0",
    "@radix-ui/react-slider": "^1.2.0",
    "@radix-ui/react-slot": "^1.1.0",
    "@radix-ui/react-switch": "^1.1.0",
    "@radix-ui/react-tabs": "^1.1.0",
    "@radix-ui/react-toast": "^1.2.1",
    "@radix-ui/react-toggle": "^1.1.0",
    "@radix-ui/react-toggle-group": "^1.1.0",
    "@radix-ui/react-tooltip": "^1.1.4",
    "@react-pdf/renderer": "^4.3.0",
    "@supabase/supabase-js": "^2.50.0",
    "@tanstack/react-query": "^5.56.2",
    "@types/puppeteer": "^5.4.7",
    "@types/react-window": "^1.8.8",
    "axios": "^1.10.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.0.0",
    "date-fns": "^3.6.0",
    "dompurify": "^3.2.6",
    "embla-carousel-react": "^8.3.0",
    "html2canvas": "^1.4.1",
    "immer": "^10.1.1",
    "input-otp": "^1.2.4",
    "isomorphic-dompurify": "^2.26.0",
    "jspdf": "^3.0.1",
    "lucide-react": "^0.462.0",
    "next-themes": "^0.3.0",
    "openai": "^4.67.3",
    "puppeteer": "^24.12.1",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.53.0",
    "react-resizable-panels": "^2.1.3",
    "react-router-dom": "^6.26.2",
    "react-window": "^1.8.11",
    "react-window-infinite-loader": "^1.0.10",
    "recharts": "^2.12.7",
    "sonner": "^1.5.0",
    "tailwind-merge": "^2.5.2",
    "tailwindcss-animate": "^1.0.7",
    "vaul": "^0.9.3",
    "web-vitals": "^5.0.3",
    "zod": "^3.25.76",
    "zustand": "^5.0.6"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@axe-core/react": "^4.10.2",
    "@eslint/js": "^9.9.0",
    "@faker-js/faker": "^9.9.0",
    "@tailwindcss/typography": "^0.5.15",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/dompurify": "^3.0.5",
    "@types/node": "^22.5.5",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@vitejs/plugin-react-swc": "^3.5.0",
    "@vitest/coverage-v8": "^1.6.0",
    "@vitest/ui": "^1.6.0",
    "artillery": "^2.0.23",
    "autoprefixer": "^10.4.20",
    "axe-core": "^4.10.3",
    "cross-env": "^7.0.3",
    "dotenv": "^17.2.0",
    "eslint": "^9.9.0",
    "eslint-plugin-react-hooks": "^5.1.0-rc.0",
    "eslint-plugin-react-refresh": "^0.4.9",
    "factory.ts": "^1.4.2",
    "glob": "^10.4.5",
    "globals": "^15.9.0",
    "husky": "^9.0.11",
    "jest-axe": "^10.0.0",
    "jsdom": "^26.1.0",
    "lint-staged": "^15.2.2",
    "msw": "^2.10.4",
    "postcss": "^8.4.47",
    "prettier": "^3.2.5",
    "rollup-plugin-visualizer": "^5.12.0",
    "tailwindcss": "^3.4.11",
    "typescript": "^5.5.3",
    "typescript-eslint": "^8.0.1",
    "vite": "^5.4.1",
    "vite-plugin-compression": "^0.5.1",
    "vite-plugin-pwa": "^0.19.0",
    "vitest": "^1.6.0"
  },
  "optionalDependencies": {
    "@sentry/react": "^7.110.0",
    "@sentry/vite-plugin": "^2.16.0"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{js,jsx,json,css,scss,md}": [
      "prettier --write"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all",
      "not safari < 10",
      "not chrome < 51",
      "not android < 5",
      "not ie < 12"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rentresponsiblyrr/doublecheck_unified.git"
  },
  "keywords": [
    "property-inspection",
    "ai",
    "react",
    "typescript",
    "vite"
  ]
}
